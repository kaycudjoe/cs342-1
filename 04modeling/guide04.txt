Work through the following materials this week, making sure that you can do the given activities:

Read Chapter 14 (focus primarily on Sections 14.1-2, 14.3.1-3, 14.5-6) — It’s ok to submit rather fuzzy or even empty answers on the material specifically marked for Wednesday’s discussion.
1a. Explain the four informal guidelines discussed in Section 14.1.
	Making sure that the semantics of attributes is clear in the schema
		The meaning of the vales in a table and the tables themselves should not be vague.
	Reducing the redundant information in tuples
		The same information should not be present in multiple areas of the table.
	Reducing the NULL values in tuples
		Making as many fields as possible apply to every record of the table
	Disallowing the possibility of generating spurious tuples
		Making sure all records are valid
1b. Explain the terms functional dependency (for Monday, see Section 14.2) and multi-valued dependency (for Wednesday, see Section 14.6) by giving an example of each and showing how it satisfies the term’s formal definition.
	Functional dependency: A constraint between two sets of attributes in a database. For example, city-region and country.  If a person's permanent mailing city-region is in Minneapolis, Minnesota, their permanent mailing country cannot be China. This satisfies t1[X]=t2[X] -> t1[Y]=t2[Y] because two people who have permanent mailing addresses both in a certain city in a certain region cannot live in two different countries.
	Multi-valued dependency: 
1c. Review the formal definitions of these terms: superkey; key (see Section 14.3.3).
	Superkey: No two sets of tuples will exist with the same combination of attributes as defined by the superkey.
	Key: Superkey which, if an attribute is removed, will not result in unique tuples.
1d. Explain BCNF (for Monday, see Section 14.5) and 4NF (for Wednesday, see Section 14.6) by giving an example relation and proving whether its schema conforms (or fails to conform) to the definitions of each normal form.
	BCNF:  Boyce-Codd Normal Form: Whenever a nontrivial functional dependency x -> A holds in R, Xis a superkey of R.
	4NF:
1e. Explain when one would one want to normalize a relational schema and when one might want to de-normalize one.
	Normalize to improve integrity, denormalize to make the database easier to read.
2. Review Section 15.1.1 well enough to be able to define Armstrong’s axioms (IR1–3) and closures.
	Armstrong's axioms: 
		If Y is logically implied by X then X implies Y.
		If X implies Y, then X and Z imply Y and Z for any Z.
		If X implies Y and Y implies Z then X implies Z.
	Closures:
		If X implies Y and X implies Z then X implies Y and Z.
		If X implies Y and Z, then X implies Y and X implies Z.